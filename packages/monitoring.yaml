# @Author: Will Scott <willscottuk>
# @Date:   14/06/2017 21:02
# @Project: Ambassadr Home Automation
# @Last modified by:   willscott
# @Last modified time: 11/03/2018 21:32

# This package deals with internal monitoring - both inside the flat and inside the server

homeassistant:
  customize:
    # Add some friendly names
    sensor.power_usage:
      friendly_name: 'Electricity'
      icon: mdi:speedometer
    sensor.speedtest_ping:
      icon: mdi:pulse
    sensor.speedtest_download:
      icon: mdi:cloud-download
    sensor.speedtest_upload:
      icon: mdi:cloud-upload
    sensor.disk_use_percent_mediabasecampsherpa:
      friendly_name: "Sherpa"
    sensor.disk_use_percent_mediabasecampdragonfly:
      friendly_name: "Dragonfly"
    sensor.since_last_boot:
      friendly_name: "Uptime"
    sensor.electricity_usage:
      icon: mdi:flash-circle
    sensor.tumble_dryer_current:
      icon: mdi:washing-machine
    sensor.air_quality:
      icon: mdi:home-heart
    sensor.memory_use_percent:
      friendly_name: Memory use
    sensor.basecamp_living_room_air_quality:
      friendly_name: Air Quality

switch:
  - platform: tplink
    host: !secret dryer_ip
    name: "Tumble Dryer"

# Docker switches
  - platform: rest
    resource: http://localhost:8126/container/portainer
    name: Portainer
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://localhost:8126/container/influxdb
    name: InfluxDB
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://localhost:8126/container/tautuli
    name: Tautuli
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

input_select:
  log_level:
    name: Log Level
    options:
      - critical
      - fatal
      - error
      - warning
      - warn
      - info
      - debug
      - notset
    initial: error

sensor:
  - platform: version
    name: Installed HA version
  - platform: loopenergy
    electricity:
      electricity_serial: !secret loop_serial
      electricity_secret: !secret loop_secret
  - platform: speedtest
    minute:
      - 45
    monitored_conditions:
      - download
      - upload
    server_id: 4078
  - platform: fastdotcom
    minute:
      - 15
  - platform: statistics
    entity_id: sensor.power_usage
    name: Power Stats
    sampling_size: 25
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: !secret disk
      - type: disk_use_percent
        arg: !secret disk2
      - type: memory_use_percent
      - type: processor_use
  - platform: cpuspeed
  - platform: rest
    resource: https://pypi.python.org/pypi/homeassistant/json
    name: HA upstream
    value_template: '{{ value_json.info.version }}'
    scan_interval: 3600
  - platform: template
    sensors:
      electricity_usage:
        friendly_name: "Electricity Usage"
        value_template: >-
          {%- if states("sensor.power_stats_mean") | float < 0.3 -%}
            Low
          {%- elif states("sensor.power_stats_mean") | float < 1.0 -%}
            Moderate
          {%- elif states("sensor.power_stats_mean") | float >= 1.0 -%}
            High
          {%- else -%}
            Unknown
          {%- endif -%}
      tumble_dryer_current:
        friendly_name: 'Tumble Dryer Current'
        # The attribute changed in 0.61
        value_template: '{{ states.switch.tumble_dryer.attributes["current_power_w"].split(" ")[0] }}'
        unit_of_measurement: 'W'
      air_quality:
        friendly_name: "Air Quality"
        value_template: >-
          {%- if states("sensor.basecamp_living_room_air_quality") | float <= 0.4 -%}
            Very Abnormal
          {%- elif states("sensor.basecamp_living_room_air_quality") | float <= 0.6 -%}
            Abnomrmal
          {%- elif states("sensor.basecamp_living_room_air_quality") | float <= 1.0 -%}
            Normal
          {%- else -%}
            Unknown
          {%- endif -%}

  # This monitors the continuous integration status of Ambassadr.
  # Automations using this are down below: Configuration Update.
  - platform: travisci
    api_key: !secret travisci

  - platform: pi_hole
    host: !secret pihole
  - platform: cert_expiry
    host: !secret base_url

linode:
  access_token: !secret linode

group:
  System:
    - sensor.disk_use_percent_mediabasecampdragonfly
    - sensor.disk_use_percent_mediabasecampsherpa
    - sensor.memory_use_percent
    - sensor.processor_use
    - sensor.cpu_speed
  Speed:
    - sensor.speedtest_download
    - sensor.speedtest_upload
    - sensor.fastcom_download
  Power:
    -  sensor.power_usage
    -  sensor.power_stats_mean
    -  sensor.electricity_usage
    -  sensor.tumble_dryer_current
  Developer:
    control: hidden
    entities:
      - input_select.log_level
      - input_text.what
      - input_select.where
      - script.tts_test
      - input_boolean.light_trigger
  Docker:
    control: hidden
    entities:
      - switch.portainer
      - switch.influxdb
      - switch.tautuli

automation:
  - alias: "Configuration Update"
    trigger:
      platform: state
      entity_id: sensor.ambassadrhomeassistant_last_build_finished_at
    condition:
      - condition: state
        entity_id: sensor.ambassadrhomeassistant_last_build_state
        state: 'passed'
      - condition: template
        value_template: '{{states.sensor.ambassadrhomeassistant_last_build_finished_at.attributes["Commit Branch"] == "master"}}'
      - condition: template
        value_template: '{{states.sensor.ambassadrhomeassistant_last_build_finished_at != "unknown"}}'
    action:
      - service: script.configuation_update

  - alias: Log Level
    trigger:
      platform: state
      entity_id: input_select.log_level
    action:
      service: logger.set_level
      data_template:
        homeassistant.components: "{{ trigger.to_state.state }}"

script:
  configuation_update:
    sequence:
      - service: shell_command.git_pull
      - service: notify.will
        data_template:
          title: "\U000026A1 Restarting HomeAssistant Now"
          message: "Restarting in 30 seconds to update to new build"
      - delay: 00:00:30
      - service: homeassistant.restart

shell_command:
  git_pull: 'bash /home/basecamp/.homeassistant/scripts/git_pull.sh'
