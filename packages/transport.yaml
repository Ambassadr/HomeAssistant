# @Author: Will Scott <willscottuk>
# @Date:   14/06/2017 21:13
# @Project: Ambassadr Home Automation
# @Last modified by:   willscott
# @Last modified time: 18/03/2018 21:25

# This package deals with transport

homeassistant:
  customize:
    sensor.eastbound_trams:
      custom_ui_state_card: state-card-eastbound
    sensor.westbound_trams:
      custom_ui_state_card: state-card-westbound
    sensor.next_train_to_vic:
      custom_ui_state_card: state-card-traintimes
    sensor.next_train_to_ctk:
      custom_ui_state_card: state-card-traintimes
    sensor.tram_status:
      icon: mdi:tram

sensor:

  # Gets the tram status from TfL
  - platform: rest
    resource: https://api.tfl.gov.uk/line/tram/status
    name: Tram Status
    value_template: '{{value_json[0].lineStatuses[0].statusSeverityDescription}}'

  # I've written some PHP scripts which spit out JSON of the next east and westbound trams.
  - platform: jsonrest
    name: Eastbound Trams
    resource: !secret eastbound_trams
  - platform: jsonrest
    name: Westbound Trams
    resource: !secret westbound_trams

  # Live train times from ECR come courtesy of the uk_transport component.
  - platform: uk_transport
    app_id: !secret transport_id
    app_key: !secret transport_key
    queries:
      - mode: train
        origin: ECR
        destination: VIC
      - mode: train
        origin: ECR
        destination: CTK

group:
  tram:
    name: Trams
    control: hidden
    entities:
      - sensor.tram_status
      - sensor.eastbound_trams
      - sensor.westbound_trams
  vic:
    name: VIC trains
    control: hidden
    entities:
      - sensor.next_train_to_vic
  ctk:
    name: CTK trains
    control: hidden
    entities:
      - sensor.next_train_to_ctk

# Let's do some location stuff with the station
zone:
  - name: ECR
    latitude: 51.375561
    longitude: -0.092753
    radius: 190
    icon: mdi:train

script:
  ecr_will:
    sequence:
      - service: notify.will
        data:
          title: "\ud83d\ude89 ECR to VIC"
          message: "{% if (states.sensor.next_train_to_vic.attributes.next_trains[0].status | lower != 'no report') %} {{states.sensor.next_train_to_vic.attributes.next_trains[0].scheduled}}{% if (states.sensor.next_train_to_vic.attributes.next_trains[0].status | lower == 'late') %} ({{states.sensor.next_train_to_vic.attributes.next_trains[0].status | lower}}: {{states.sensor.next_train_to_vic.attributes.next_trains[0].estimated}}){% endif %} on {{states.sensor.next_train_to_vic.attributes.next_trains[0].platform}}.\r{% endif %}{% if (states.sensor.next_train_to_vic.attributes.next_trains[1].status | lower != 'no report') %}{{states.sensor.next_train_to_vic.attributes.next_trains[1].scheduled}}{% if (states.sensor.next_train_to_vic.attributes.next_trains[1].status | lower == 'late') %} ({{states.sensor.next_train_to_vic.attributes.next_trains[1].status | lower}}: {{states.sensor.next_train_to_vic.attributes.next_trains[1].estimated}}){% endif %} on {{states.sensor.next_train_to_vic.attributes.next_trains[1].platform}}.\r{% endif %}{% if (states.sensor.next_train_to_vic.attributes.next_trains[2].status | lower != 'no report') %}{{states.sensor.next_train_to_vic.attributes.next_trains[2].scheduled}}{% if (states.sensor.next_train_to_vic.attributes.next_trains[2].status | lower == 'late') %} ({{states.sensor.next_train_to_vic.attributes.next_trains[2].status | lower}}: {{states.sensor.next_train_to_vic.attributes.next_trains[2].estimated}}){% endif %} on {{states.sensor.next_train_to_vic.attributes.next_trains[2].platform}}.\r{% endif %}{% if (states.sensor.next_train_to_vic.attributes.next_trains[2].status | lower == 'no report' and states.sensor.next_train_to_vic.attributes.next_trains[3].status | lower != 'no report') %}{{states.sensor.next_train_to_vic.attributes.next_trains[3].scheduled}}{% if (states.sensor.next_train_to_vic.attributes.next_trains[3].status | lower == 'late') %} ({{states.sensor.next_train_to_vic.attributes.next_trains[3].status | lower}}: {{states.sensor.next_train_to_vic.attributes.next_trains[3].estimated}}){% endif %} on {{states.sensor.next_train_to_vic.attributes.next_trains[3].platform}}.\r{% endif %}"
  ecr_dan:
    sequence:
      - service: notify.will
        data:
          title: "\ud83d\ude89 ECR to CTK"
          message: "{% if (states.sensor.next_train_to_ctk.attributes.next_trains[0].status | lower != 'no report') %}{{states.sensor.next_train_to_ctk.attributes.next_trains[0].estimated}} ({{states.sensor.next_train_to_ctk.attributes.next_trains[0].status | lower}}) on {{states.sensor.next_train_to_ctk.attributes.next_trains[0].platform}}.\r{% endif %}{% if (states.sensor.next_train_to_ctk.attributes.next_trains[1].status | lower != 'no report') %}{{states.sensor.next_train_to_ctk.attributes.next_trains[1].estimated}} ({{states.sensor.next_train_to_ctk.attributes.next_trains[1].status | lower}}) on {{states.sensor.next_train_to_ctk.attributes.next_trains[1].platform}}.\r{% endif %}{% endif %}{% if (states.sensor.next_train_to_ctk.attributes.next_trains[1].status | lower != 'no report') %}{{states.sensor.next_train_to_ctk.attributes.next_trains[1].estimated}} ({{states.sensor.next_train_to_ctk.attributes.next_trains[1].status | lower}}) on {{states.sensor.next_train_to_ctk.attributes.next_trains[1].platform}}.\r{% endif %}"

# BETA: Next train notifications
automation:
  - alias: 'Will at ECR'
    trigger:
         platform: zone
         entity_id: device_tracker.will_iphone
         zone: zone.ecr
         event: enter
    condition:
      # If it's a work day and a reasonable commuting time.
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: time
        before: '10:00:00'
      - condition: time
        after: '05:30:00'
    action:
        - service: script.ecr_will

  - alias: 'Dan at ECR'
    trigger:
         platform: zone
         entity_id: device_tracker.dan_iphone
         zone: zone.ecr
         event: enter
    condition:
      # If it's a work day and a reasonable commuting time.
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: time
        before: '10:00:00'
      - condition: time
        after: '05:30:00'
    action:
        # Currently in test mode, so just notifying me, not Dan.
        - service: notify.will
          data:
            title: "\U0001F689 Next 3 trains to CTK"
            message: "1: {{states.sensor.next_train_to_ctk.attributes.next_trains[0].scheduled}} from {{states.sensor.next_train_to_ctk.attributes.next_trains[0].origin_name}} is {{states.sensor.next_train_to_ctk.attributes.next_trains[0].status | lower}}. Plat {{states.sensor.next_train_to_ctk.attributes.next_trains[0].platform}} at {{states.sensor.next_train_to_ctk.attributes.next_trains[0].estimated}}.
            2: {{states.sensor.next_train_to_ctk.attributes.next_trains[1].scheduled}} from {{states.sensor.next_train_to_ctk.attributes.next_trains[1].origin_name}} is {{states.sensor.next_train_to_ctk.attributes.next_trains[1].status | lower}}. Plat {{states.sensor.next_train_to_ctk.attributes.next_trains[1].platform}} at {{states.sensor.next_train_to_ctk.attributes.next_trains[1].estimated}}.
            3: {{states.sensor.next_train_to_ctk.attributes.next_trains[2].scheduled}} from {{states.sensor.next_train_to_ctk.attributes.next_trains[2].origin_name}} is {{states.sensor.next_train_to_ctk.attributes.next_trains[2].status | lower}}. Plat {{states.sensor.next_train_to_ctk.attributes.next_trains[2].platform}} at {{states.sensor.next_train_to_ctk.attributes.next_trains[2].estimated}}."
