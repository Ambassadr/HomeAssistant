# @Author: Will Scott <willscottuk>
# @Date:   12/06/2017 20:34
# @Project: Ambassadr Home Automation
# @Last modified by:   willscott
# @Last modified time: 14/04/2018 11:06

# This package deals with what I hope will become whole home audio!
# Lots more work needed here! TODO: Almost everything!


tts:
  - platform: google
    language: 'en-uk'
  - platform: amazon_polly
    aws_access_key_id: !secret aws_id
    aws_secret_access_key: !secret aws_key
    region_name: 'eu-west-1'
    voice: 'Geraint'

media_player:

  # Squeezebox and snapcast removed, sonos in!

  - platform: spotify
    client_id: !secret spot_id
    client_secret: !secret spot_secret

  - platform: sonos

script:
  sonos_tts:
    sequence:
      - service: media_player.sonos_snapshot
        data_template:
          entity_id: "{{ 'media_player.' ~ where }}"
          with_group: yes
      - service: media_player.sonos_unjoin
        data_template:
          entity_id: "{{ 'media_player.' ~ where }}"
      - service: media_player.volume_set
        data_template:
          entity_id: "{{ 'media_player.' ~ where }}"
          volume_level: 0.3
      - service: tts.amazon_polly_say
        data_template:
          entity_id: "{{ 'media_player.' ~ where }}"
          message: "{{ what }}"
      - delay:
          seconds: 1
      - delay: >-
          {% set duration = states.media_player[where].attributes.media_duration %}
          {% if duration > 0 %}
            {% set duration = duration - 1 %}
          {% endif %}
          {% set seconds = duration % 60 %}
          {% set minutes = (duration / 60)|int % 60 %}
          {% set hours = (duration / 3600)|int %}
          {{ [hours, minutes, seconds]|join(':') }}
      - service: media_player.sonos_restore
        data_template:
          entity_id: "{{ 'media_player.' ~ where }}"
          with_group: yes
      - service: script.stream
        data_template:
          message: "{{'\U0001f4e2 ' ~ where ~': ' ~ what }}"
  sonos_broadcast:
    sequence:
      - service: media_player.sonos_snapshot
        data_template:
          entity_id:
            - media_player.living_room_one
            - media_player.bedroom_one
          with_group: yes
      - service: media_player.sonos_unjoin
        data_template:
          entity_id:
            - media_player.living_room_one
            - media_player.bedroom_one
      - service: media_player.sonos_join
        data_template:
          master: media_player.living_room_one
          entity_id: media_player.bedroom_one
      - service: media_player.volume_set
        data_template:
          entity_id:
            - media_player.living_room_one
            - media_player.bedroom_one
          volume_level: 0.5
      - service: tts.amazon_polly_say
        data_template:
          entity_id: media_player.living_room_one
          message: "{{ what }}"
      - delay:
          seconds: 1
      - delay: >-
          {% set duration = states.media_player.living_room_one.attributes.media_duration %}
          {% if duration > 0 %}
            {% set duration = duration - 1 %}
          {% endif %}
          {% set seconds = duration % 60 %}
          {% set minutes = (duration / 60)|int % 60 %}
          {% set hours = (duration / 3600)|int %}
          {{ [hours, minutes, seconds]|join(':') }}
      - service: media_player.sonos_restore
        data_template:
          entity_id:
            - media_player.living_room_one
            - media_player.bedroom_one
          with_group: yes
      - service: script.stream
        data_template:
          message: "{{'\U0001f4e2 Broadcast: '~ what}}"

  tts_test:
    sequence:
      - service: script.sonos_tts
        data_template:
          what: "{{ states('input_text.what') }}"
          where: "{{ states('input_select.where') }}"

automation:

  - alias: Spotify Card Visible
    trigger:
      platform: template
      value_template: "{{ not is_state('media_player.spotify', 'paused') }}"
    action:
      service: group.set_visibility
      entity_id: group.spotify_card
      data:
        visible: true

  - alias: Spotify Card Hidden
    trigger:
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: media_player.spotify
        to: 'paused'
        for:
          minutes: 5
      - platform: state
        entity_id: media_player.spotify
        to: 'idle'
        for:
          minutes: 3
      - platform: state
        entity_id: media_player.spotify
        to: 'off'
    action:
      service: group.set_visibility
      entity_id: group.spotify_card
      data:
        visible: false

  - alias: Living Room Sonos Visible
    trigger:
      platform: template
      value_template: "{{ not is_state('media_player.living_room_one', 'paused') }}"
    action:
      service: group.set_visibility
      entity_id: group.sonos_livingroom
      data:
        visible: true

  - alias: Living Room Sonos Hidden
    trigger:
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: media_player.living_room_one
        to: 'paused'
        for:
          minutes: 5
      - platform: state
        entity_id: media_player.living_room_one
        to: 'idle'
        for:
          minutes: 3
      - platform: state
        entity_id: media_player.living_room_one
        to: 'off'
    action:
      service: group.set_visibility
      entity_id: group.sonos_livingroom
      data:
        visible: false

  - alias: Bedroom Sonos Visible
    trigger:
      platform: template
      value_template: "{{ not is_state('media_player.bedroom_one', 'paused') }}"
    action:
      service: group.set_visibility
      entity_id: group.sonos_bedroom
      data:
        visible: true

  - alias: Bedroom Sonos Hidden
    trigger:
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: media_player.bedroom_one
        to: 'paused'
        for:
          minutes: 5
      - platform: state
        entity_id: media_player.bedroom_one
        to: 'idle'
        for:
          minutes: 3
      - platform: state
        entity_id: media_player.bedroom_one
        to: 'off'
    action:
      service: group.set_visibility
      entity_id: group.sonos_bedroom
      data:
        visible: false

group:
  spotify_card: # TODO: Improve this!
    entities:
      - media_player.spotify
  sonos_livingroom:
    entities:
      - media_player.living_room_one
  sonos_bedroom:
    entities:
      - media_player.bedroom_one

# Add the debug inputs for the developer settings
input_text:
  what:
    name: What to speak
    initial: "Hello, world"
input_select:
  where:
    name: Where to speak
    options:
     - bedroom_one
     - living_room_one
