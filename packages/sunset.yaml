# @Author: Will Scott <willscottuk>
# @Date:   11/06/2017 19:10
# @Project: Ambassadr Home Automation
# @Last modified by:   willscott
# @Last modified time: 16/07/2017 19:09

# This package enables the evening light transitions
# @Dependencies: packages/lights, packages/presence


switch:
  - platform:  flux
    lights:
      - light.sofa
      - light.dining
      - light.main
      - light.will_side
      - light.daniel_side
      - light.utility
      - light.bathroom
      - light.map
    name: Flux
    start_time: '06:00'
    stop_time: '22:00'
    start_colortemp: 5000
    sunset_colortemp: 3500
    stop_colortemp: 2500
    mode: mired
    disable_brightness_adjust: true


input_boolean:

# Comment: I know that these designations aren't actually astronomically accurate
# (see https://www.timeanddate.com/astronomy/different-types-twilight.html) but
# they're useful moderately descriptive terms for what I'm trying to acheive.

  early_twilight:
    initial: off
    name: Early Twilight

  mid_twilight:
    initial: off
    name: Mid Twilight

  dusk:
    initial: off
    name: Dusk

# SCENES

scene:
  - name: Sunset1
    entities:
     group.living_room:
        state: on
        transition: 90
        brightness: 35
        color_temp: 285
  - name: Sunset2
    entities:
     group.living_room:
        state: on
        transition: 90
        brightness: 70
        color_temp: 285
  - name: Sunset3
    entities:
     group.living_room:
        state: on
        transition: 180
        brightness: 115
     group.hall:
        state: on
        transition: 10
        brightness: 25
     group.bedroom:
        state: on
        transition: 180
        brightness: 115


# These are now just automations to turn on the switches. First set for clear(ish)
# skies, the second set for cloudy days...

automation:
  - alias: 'Early Twilight; Clear Skies'
    trigger:
      platform: numeric_state
      entity_id: sun.sun
      value_template: '{{ state.attributes.elevation }}'
      below: 3.5
    condition:
      condition: numeric_state
      entity_id: sensor.dark_sky_cloud_coverage
      below: 60
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.early_twilight

  - alias: 'Mid Twilight; Clear Skies'
    trigger:
      platform: numeric_state
      entity_id: sun.sun
      value_template: '{{ state.attributes.elevation }}'
      below: 1.5
    condition:
      condition: numeric_state
      entity_id: sensor.dark_sky_cloud_coverage
      below: 60
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.mid_twilight
      - service: input_boolean.turn_off
        entity_id: input_boolean.early_twilight

  - alias: 'Dusk; Clear Skies'
    trigger:
      platform: numeric_state
      entity_id: sun.sun
      value_template: '{{ state.attributes.elevation }}'
      below: -2.5
    condition:
      condition: numeric_state
      entity_id: sensor.dark_sky_cloud_coverage
      below: 60
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.dusk
      - service: input_boolean.turn_off
        entity_id: input_boolean.mid_twilight

# And now for cloudy skies

  - alias: 'Early Twilight; Dark Skies'
    trigger:
      platform: numeric_state
      entity_id: sun.sun
      value_template: '{{ state.attributes.elevation }}'
      below: 5
    condition:
      condition: numeric_state
      entity_id: sensor.dark_sky_cloud_coverage
      above: 60
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.early_twilight
      - service: notify.everyone
        data:
          title: "\U00002601 Dark Skies"
          message: "It's a bit dark out so I've switched the lights on early for you!"

  - alias: 'Mid Twilight; Dark Skies'
    trigger:
      platform: numeric_state
      entity_id: sun.sun
      value_template: '{{ state.attributes.elevation }}'
      below: 3
    condition:
      condition: numeric_state
      entity_id: sensor.dark_sky_cloud_coverage
      above: 60
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.mid_twilight
      - service: input_boolean.turn_off
        entity_id: input_boolean.early_twilight

  - alias: 'Dusk; Dark Skies'
    trigger:
      platform: numeric_state
      entity_id: sun.sun
      value_template: '{{ state.attributes.elevation }}'
      below: 0
    condition:
      condition: numeric_state
      entity_id: sensor.dark_sky_cloud_coverage
      above: 60
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.dusk
      - service: input_boolean.turn_off
        entity_id: input_boolean.mid_twilight

  - alias: 'Sunset Lighting 1'
    trigger:
      platform: state
      entity_id: input_boolean.early_twilight
      from: 'off'
      to: 'on'
    condition:
      condition: state
      entity_id: group.people
      state: 'on'
    action:
      service: scene.turn_on
      entity_id: scene.sunset1

  - alias: 'Sunset Lighting 2'
    trigger:
      platform: state
      entity_id: input_boolean.mid_twilight
      from: 'off'
      to: 'on'
    condition:
      condition: state
      entity_id: group.people
      state: 'on'
    action:
        - service: scene.turn_on
          entity_id: scene.sunset2
        - service: script.turn_on
          entity_id: script.hall_lights

  - alias: 'Sunset Lighting 3'
    trigger:
      platform: state
      entity_id: input_boolean.dusk
      from: 'off'
      to: 'on'
    condition:
        - condition: state
          entity_id: group.people
          state: 'on'
        - condition: time
          before: '22:00:00'
    action:
        - service: scene.turn_on
          entity_id: scene.sunset3
        - delay: 0:04
        - service: switch.turn_on
          entity_id: switch.flux

group:
  Flux:
    control: hidden
    entities:
      -  switch.flux

  Sunset:
    control: hidden
    entities:
      -  input_boolean.early_twilight
      -  input_boolean.mid_twilight
      -  input_boolean.dusk
