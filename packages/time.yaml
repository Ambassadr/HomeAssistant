# @Author: Will Scott <willscottuk>
# @Date:   12/06/2017 21:52
# @Project: Ambassadr Home Automation
# @Last modified by:   willscott
# @Last modified time: 13/02/2018 21:29

# This package deals with time and all time-based automations


# This sensor is what allows HASS to know what time it is (and date, day of week etc.)
sensor:
  - platform: time_date
    display_options:
      - 'time'

# A currently unused scene... I have ideas for how better to handle this.
scene:
  - name: Good Night
    entities:
      switch.flux:
        state: off
      group.living_room:
        state: off
        transition: 30
      group.hall:
        state: off
        transition: 45
      group.bedroom:
        state: off
        transition: 60

#    Automatic Time Modes
#
#    04:30 until sunrise*: Dawn
#    Sunrise until midday: Morning
#    Midday until sunset: Afternoon
#    Sunset* until 22:00: Evening
#    22:00 until 04:30: Night
#
#    *Note: Due to geographical location, sunrise never takes place prior to 04:30 and sunset never takes place after 22:00. These modes are therefore location appropriate. Your milage may vary...

input_select:
  time_mode:
    name: Time Mode
    options:
      - Dawn
      - Morning
      - Afternoon
      - Evening
      - Night

# These are then the time-based automations

automation:

# 1: 04:30: Reset everything (but not guest_mode or holiday_mode), turn on dawn_mode and turn off night_mode.
# Aside: this is also when the presence module checks to see if anyone is home - if not then holiday_mode is automagically switched on.

  - alias: 'Morning Reset'
    trigger:
        platform: time
        at: '04:30:00'
    condition:
      - condition: time
        before: '06:00:00'
    action:
      - service: input_select.select_option
        entity_id: input_select.time_mode
        option: Dawn
      - service: input_boolean.turn_off
        entity_id:
          - input_boolean.romance_mode
          - input_boolean.party_mode
          - input_boolean.quiet_mode
      # This should have been covered off at evening -> night but just in case
      - service: input_select.select_option
        entity_id: input_select.sunset_phase
        option: Unset
      - service: input_select.select_option
        entity_id: input_select.cloud_cover
        option: Unset
      # Reset SONOS volumes
      - service: media_player.volume_set
        entity_id:
          - media_player.living_room_one
          - media_player.bedroom_one
        data:
          volume_level: "0.15"

# 2: Sunrise! Turn off Danw and turn on Morning.

  - alias: 'Morning Mode'
    trigger:
      platform: numeric_state
      entity_id: sun.sun
      value_template: '{{ state.attributes.elevation }}'
      above: 0.1
    condition:
      # This is just a safety catch for when HASS restarts
      - condition: time
        before: '12:00:00'
    action:
      - service: input_select.select_option
        entity_id: input_select.time_mode
        option: Morning

# 3: Midday: Turn off Morning and turn on Afternoon.

  - alias: "Afternoon Mode"
    trigger:
      - platform: time
        at: '12:00:00'
    condition:
      - condition: time
        before: '16:30:00'
      - condition: time
        after: '12:00:00'
    action:
      - service: input_select.select_option
        entity_id: input_select.time_mode
        option: Afternoon

# 4: Sunset(ish): Set mode to evening.

# This isn't actually sunset but when the sunset automations kick in (see packages/sunset) which are weather dependent.

  - alias: 'Evening Mode'
    trigger:
      platform: state
      entity_id: input_select.sunset_phase
      to: Early Twilight
    condition:
      - condition: time
        before: '22:00:00'
      - condition: time
        after: '15:00:00'
    action:
      - service: input_select.select_option
        entity_id: input_select.time_mode
        option: Evening

# 5: Night mode: Set mode to night. Also turns off dusk.

  - alias: "Night Mode"
    trigger:
      - platform: time
        at: '22:00:00'
    condition:
      - condition: time
        before: '23:59:00'
    action:
      - service: input_select.select_option
        entity_id: input_select.time_mode
        option: Night
      - service: input_select.select_option
        entity_id: input_select.sunset_phase
        option: Unset
      - service: input_select.select_option
        entity_id: input_select.cloud_cover
        option: Unset

# Automations to set the mode correctly at startup

  - alias: 'Auto Dawn Mode'
    trigger:
      platform: homeassistant
      event: start
    condition:
      - condition: time
        after: '04:30:00'
      - condition: time
        before: '12:00:00'
      - condition: numeric_state
        entity_id: sun.sun
        value_template: '{{ state.attributes.elevation }}'
        below: 0.1
    action:
      - service: input_select.select_option
        entity_id: input_select.time_mode
        option: Dawn
  - alias: 'Auto Morning Mode'
    trigger:
      platform: homeassistant
      event: start
    condition:
      - condition: time
        before: '12:00:00'
      - condition: numeric_state
        entity_id: sun.sun
        value_template: '{{ state.attributes.elevation }}'
        above: 0.1
    action:
      - service: input_select.select_option
        entity_id: input_select.time_mode
        option: Morning
  - alias: 'Auto Afternoon Mode'
    trigger:
      platform: homeassistant
      event: start
    condition:
      - condition: time
        after: '12:00:00'
      # This isn't strictly right, but as an approximation it's okay.
      - condition: numeric_state
        entity_id: sun.sun
        value_template: '{{ state.attributes.elevation }}'
        above: 0.1
    action:
      - service: input_select.select_option
        entity_id: input_select.time_mode
        option: Afternoon
  - alias: 'Auto Evening Mode'
    trigger:
      platform: homeassistant
      event: start
    condition:
      - condition: time
        before: '22:00:00'
      - condition: time
        after: '12:00:00'
      # This isn't strictly right, but as an approximation it's okay.
      - condition: numeric_state
        entity_id: sun.sun
        value_template: '{{ state.attributes.elevation }}'
        below: 0.1
    action:
      - service: input_select.select_option
        entity_id: input_select.time_mode
        option: Evening
  - alias: 'Auto Night Mode PM'
    trigger:
      platform: homeassistant
      event: start
    condition:
      - condition: time
        after: '22:00:00'
      - condition: numeric_state
        entity_id: sun.sun
        value_template: '{{ state.attributes.elevation }}'
        below: 0.1
    action:
      - service: input_select.select_option
        entity_id: input_select.time_mode
        option: Night
  - alias: 'Auto Night Mode AM'
    trigger:
      platform: homeassistant
      event: start
    condition:
      - condition: time
        before: '04:30:00'
      - condition: numeric_state
        entity_id: sun.sun
        value_template: '{{ state.attributes.elevation }}'
        below: 0.1
    action:
      - service: input_select.select_option
        entity_id: input_select.time_mode
        option: Night
