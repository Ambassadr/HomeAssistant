# @Author: Will Scott <willscottuk>
# @Date:   11/06/2017 19:15
# @Project: Ambassadr Home Automation
# @Last modified by:   willscott
# @Last modified time: 30/08/2018 12:34

# This package allows for presence detection and response to comings and goings

homeassistant:
  customize:
    input_boolean.will_home:
      entity_picture: !secret will_photo

    input_boolean.dan_home:
      entity_picture: !secret dan_photo

    device_tracker.will_iphone:
      icon: mdi:crosshairs-gps
    device_tracker.will_ping:
      icon: mdi:cellphone
    device_tracker.dan_iphone:
      icon: mdi:crosshairs-gps
    device_tracker.dan_ping:
      icon: mdi:cellphone

device_tracker:
  - platform: tplink
    host: 10.10.1.1
    username: !secret tplink_user
    password: !secret tplink_pass
    track_new_devices: true
    consider_home: 60

zone:
  - name: Home
    latitude: !secret lat
    longitude: !secret long
    radius: 120
    icon: mdi:home

input_boolean:
  will_home:
    name: Will Home

  dan_home:
    name: Dan Home

  will_very_away:
    name: Will Very Away

  dan_very_away:
    name: Dan Very Away

  will_presence_lock:
    name: Will Presence Lock
    initial: off

  dan_presence_lock:
    name: Dan Presence Lock
    initial: off

  # There are two main presence-based modes. These may be removed at some point.
  away_mode:
    name: Away
    icon: mdi:nature-people

  home_mode:
    name: Home
    icon: mdi:home

group:
  people:
    - input_boolean.dan_home
    - input_boolean.will_home
  presence_sensors:
    name: Presence
    control: hidden
    entities:
      - input_boolean.will_home
      - device_tracker.will_iphone
      - device_tracker.will_ping
      - input_boolean.dan_home
      - device_tracker.dan_iphone
      - device_tracker.dan_ping
  presence_modes:
    name: Presence Modes
    control: hidden
    entities:
      - input_boolean.home_mode
      - input_boolean.away_mode

automation:
  - alias: 'Will Away'
    trigger:
      # Needs to have been disconnected from the network for >3 mins
      - platform: state
        entity_id: device_tracker.will_ping
        to: 'not_home'
        for:
          minutes: 3
      # Or if owntracks updates as not_home
      - platform: state
        entity_id: device_tracker.will_iphone
        from: 'home'
        to: 'not_home'
    condition:
      # Needs to have been on in the first place - don't want this always firing!
      - condition: state
        entity_id: input_boolean.will_home
        state: 'on'
      # Front door needs to have opened recently
      - condition: state
        entity_id: input_boolean.front_door_recent
        state: 'on'
      # Let's not flip-flop between home and away
      - condition: state
        entity_id: input_boolean.will_presence_lock
        state: 'off'
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.will_home
      - service: script.stream
        data:
          message: "\U0001f44b Will went away"

  - alias: 'Will Backstop'
    trigger:
      # Triggers if at ECR
      - platform: state
        entity_id: device_tracker.will_iphone
        to: 'ECR'
      # Or at WIM
      - platform: state
        entity_id: device_tracker.will_iphone
        to: 'WIM'
    condition:
      # Needs to have been on in the first place - don't want this always firing!
      - condition: state
        entity_id: input_boolean.will_home
        state: 'on'
      # Let's not flip-flop between home and away
      - condition: state
        entity_id: input_boolean.will_presence_lock
        state: 'off'
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.will_home
      - service: script.stream
        data:
          message: "\U0001f44b Will went away"

  - alias: 'Dan Away'
    trigger:
      # Needs to have been disconnected from the network for >3 mins
      - platform: state
        entity_id: device_tracker.dan_ping
        to: 'not_home'
        for:
          minutes: 3
      # Or if owntracks updates as not_home
      - platform: state
        entity_id: device_tracker.dan_iphone
        from: 'home'
        to: 'not_home'
    condition:
      # Needs to have been on in the first place - don't want this always firing!
      - condition: state
        entity_id: input_boolean.dan_home
        state: 'on'
      # Front door needs to have opened recently
      - condition: state
        entity_id: input_boolean.front_door_recent
        state: 'on'
      # Let's not flip-flop between home and away
      - condition: state
        entity_id: input_boolean.dan_presence_lock
        state: 'off'
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.dan_home
      - service: script.stream
        data:
          message: "\U0001f44b Dan went away"

  - alias: 'Dan Backstop'
    trigger:
      # Triggers if at ECR
      - platform: state
        entity_id: device_tracker.dan_iphone
        to: 'ECR'
      # Or at WIM
      - platform: state
        entity_id: device_tracker.dan_iphone
        to: 'WIM'
    condition:
      # Needs to have been on in the first place - don't want this always firing!
      - condition: state
        entity_id: input_boolean.dan_home
        state: 'on'
      # Let's not flip-flop between home and away
      - condition: state
        entity_id: input_boolean.dan_presence_lock
        state: 'off'
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.dan_home
      - service: script.stream
        data:
          message: "\U0001f44b Dan went away"

# Very away is designed to avoid giving notifications if we pop to the shops!
  - alias: 'Will Very Away'
    trigger:
      - platform: state
        entity_id: input_boolean.will_home
        from: 'on'
        to: 'off'
        for:
          hours: 1
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.will_very_away

  - alias: 'Dan Very Away'
    trigger:
      - platform: state
        entity_id: input_boolean.dan_home
        from: 'on'
        to: 'off'
        for:
          hours: 1
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.dan_very_away

# This is designed to avoid setting us as home if we're just passing through
  - alias: 'Will Ping Home'
    trigger:
      # If the device connects to the network then mark it home immediately
      - platform: state
        entity_id: device_tracker.will_ping
        from: 'not_home'
        to: 'home'
    condition:
      - condition: state
        entity_id: input_boolean.will_home
        state: 'off'
        for:
          minutes: 3 # Prevents yo-yoing if the router mis-reports the device
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.will_home
      - service: homeassistant.turn_off
        entity_id: input_boolean.will_very_away
      - service: input_boolean.turn_on
        entity_id: input_boolean.will_presence_lock

  - alias: 'Dan Ping Home'
    trigger:
      # If the device connects to the network then mark it home immediately
      - platform: state
        entity_id: device_tracker.dan_ping
        from: 'not_home'
        to: 'home'
    condition:
      - condition: state
        entity_id: input_boolean.dan_home
        state: 'off'
        for:
          minutes: 3 # Prevents yo-yoing if the router mis-reports the device
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.dan_home
      - service: homeassistant.turn_off
        entity_id: input_boolean.dan_very_away
      - service: input_boolean.turn_on
        entity_id: input_boolean.dan_presence_lock

  - alias: 'Will OwnTracks Home'
    trigger:
      # If owntracks changes to "home" then wait 3 minutes (to avoid 'just passing through triggers')
      - platform: state
        entity_id: device_tracker.will_iphone
        to: 'home'
        for:
          minutes: 3
    condition:
      - condition: state
        entity_id: input_boolean.will_home
        state: 'off'
      # Front door needs to have opened very recently
      - condition: state
        entity_id: input_boolean.front_door_recent
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.will_home
      - service: homeassistant.turn_off
        entity_id: input_boolean.will_very_away
      - service: input_boolean.turn_on
        entity_id: input_boolean.will_presence_lock

  - alias: 'Dan OwnTracks Home'
    trigger:
      # If owntracks changes to "home" then wait 3 minutes (to avoid 'just passing through triggers')
      - platform: state
        entity_id: device_tracker.dan_iphone
        to: 'home'
        for:
          minutes: 3
    condition:
      - condition: state
        entity_id: input_boolean.dan_home
        state: 'off'
      # Front door needs to have opened very recently
      - condition: state
        entity_id: input_boolean.front_door_recent
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.dan_home
      - service: homeassistant.turn_off
        entity_id: input_boolean.dan_very_away
      - service: input_boolean.turn_on
        entity_id: input_boolean.dan_presence_lock

# Designed to trigger home statuses if trackers have appeared home (even if the 3 minute rule hasn't been met) & the door is opened.
  - alias: 'Will Door Opened'
    trigger:
        platform: state
        entity_id: sensor.front_door_access_control
        to: '22' # 22 means open
    condition:
      # This is just a precaution - it's probably unnecessary
      - condition: state
        entity_id: input_boolean.will_very_away
        state: 'on'
      # So here if owntracks is home, even if the 3 minute rule hasn't been met, the individual will be marked as home.
      - condition: state
        entity_id: device_tracker.will_iphone
        state: 'home'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.will_home
      - service: homeassistant.turn_off
        entity_id: input_boolean.will_very_away
      - service: input_boolean.turn_on
        entity_id: input_boolean.will_presence_lock

  - alias: 'Dan Door Opened'
    trigger:
        platform: state
        entity_id: sensor.front_door_access_control
        to: '22' # 22 means open
    condition:
      # This is just a precaution - it's probably unnecessary
      - condition: state
        entity_id: input_boolean.dan_very_away
        state: 'on'
      # So here if owntracks is home, even if the 3 minute rule hasn't been met, the individual will be marked as home.
      - condition: state
        entity_id: device_tracker.dan_iphone
        state: 'home'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.dan_home
      - service: homeassistant.turn_off
        entity_id: input_boolean.dan_very_away
      - service: input_boolean.turn_on
        entity_id: input_boolean.will_presence_lock

# Reset presence locks
  - alias: 'Will Presence Lock Expiry'
    trigger:
        platform: state
        entity_id: input_boolean.will_presence_lock
        to: 'on'
        for:
          minutes: 4
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.will_presence_lock

  - alias: 'Dan Presence Lock Expiry'
    trigger:
        platform: state
        entity_id: input_boolean.dan_presence_lock
        to: 'on'
        for:
          minutes: 4
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.dan_presence_lock

# Greet us only if we've been 'very' away
  - alias: 'Dan Welcome Home'
    trigger:
      - platform: state
        entity_id: input_boolean.dan_very_away
        to: 'off'
        from: 'on'
    action:
      - service: notify.dan
        data:
          title: "\U0001F44B Hello Dan!"
          message: "Welcome back"

  - alias: 'Will Welcome Home'
    trigger:
      - platform: state
        entity_id: input_boolean.will_very_away
        to: 'off'
        from: 'on'
    action:
      - service: notify.will
        data:
          title: "\U0001F44B Hello Will!"
          message: "Welcome back"

# But stream even if we've only gone away briefly.
  - alias: 'Stream: Will Home'
    trigger:
      - platform: state
        entity_id: input_boolean.will_home
        to: 'on'
        from: 'off'
    action:
      - service: script.stream
        data:
          message: "\U0001f64c Will's home!"
  - alias: 'Stream: Dan Home'
    trigger:
      - platform: state
        entity_id: input_boolean.dan_home
        to: 'on'
        from: 'off'
    action:
      - service: script.stream
        data:
          message: "\U0001f64c Dan's home!"

# A safety feature in case one of us is out late!
  - alias: 'Dan Safety Report'
    trigger:
      - platform: state
        entity_id: input_boolean.dan_very_away
        to: 'off'
        from: 'on'
    condition:
      # Check that the other person has been home for >10 mins to avoid cross-notification if both are out and return home together!
      - condition: state
        entity_id: input_boolean.will_home
        state: 'on'
        for:
          minutes: 10
      - condition: state
        entity_id: input_select.time_mode
        state: Night
    action:
      - service: notify.will
        data:
          title: "\U0001F60A Safety Report"
          message: "Dan is safely home"

  - alias: 'Will Safety Report'
    trigger:
      - platform: state
        entity_id: input_boolean.will_very_away
        to: 'off'
        from: 'on'
    condition:
      # Check that the other person has been home for >10 mins to avoid cross-notification if both are out and return home together!
      - condition: state
        entity_id: input_boolean.dan_home
        state: 'on'
        for:
          minutes: 10
      - condition: state
        entity_id: input_select.time_mode
        state: Night
    action:
      - service: notify.dan
        data:
          title: "\U0001F60A Safety Report"
          message: "Will is safely home"

# Trigger the lights (according to time mode) if the house becomes occupied
  - alias: 'Presence Light Trigger'
    trigger:
      - platform: state
        entity_id: group.people
        to: 'on'
        from: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.light_trigger

# Safety lighting if one of us is back late and the flat is already in night mode

  - alias: 'Will Night Light Trigger'
    trigger:
      - platform: state
        entity_id: input_boolean.will_very_away
        to: 'off'
        from: 'on'
    condition:
      - condition: state
        entity_id: input_select.time_mode
        state: Night
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.light_trigger

  - alias: 'Dan Night Light Trigger'
    trigger:
      - platform: state
        entity_id: input_boolean.dan_very_away
        to: 'off'
        from: 'on'
    condition:
      - condition: state
        entity_id: input_select.time_mode
        state: Night
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.light_trigger
